name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: messaging_app_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          # install mysql dependencies and other build essentials
          sudo apt-get update && sudo apt-get install -y default-libmysqlclient-dev build-essential
          pip install -r messaging_app/requirements.txt
          pip install flake8 pytest-cov
          pip install mysqlclient

      - name: Run django tests
        run: |
          python messaging_app/manage.py test
        env:
          DB_ENGINE: django.db.backends.mysql
          DB_NAME: messaging_app_db
          DB_USER: root
          DB_PASSWORD: root
          DB_HOST: localhost
          DB_PORT: 3306

      - name: Lint with flake8
        run: |
          # stop the build if there are syntax errors or undefined names
          flake8 messaging_app/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 messaging_app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Test with Pytest and generate coverage
        run: |
          pytest --cov=messaging_app --cov-report=xml

      - name: Upload coverage to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
